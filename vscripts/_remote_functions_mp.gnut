global function RemoteFunctions_Init_Begin
global function RemoteFunctions_Init_Finish
global function AddCallback_OnNetworkRegistration

global function GetNV_PreGameStartTime
global function GetNV_FreefallIsFromPlane

global function FindFuncName_ByID
global function FindFuncID_ByRef

#if CLIENT
	global function Remote_CallFunction_ByRef_internal
	global function FS_ByRef_ConsistencyCheck
#endif

struct 
{
	table<string, void functionref()> functionrefs	//the actual func ref
	table<int, string> intToFunctionRef				//for client to map int to func name
	table<string, int> functionrefsToInt 			//for server to call by func name
	
	int iConsistencyCheck
	
	#if CLIENT 
		bool bConsistencyCheckComplete = false
	#endif
	
} file

// (mk): Do not include any aliased funcs that CAN BE exploited. 
// If they 100% must be executed by client when server calls them, 
// then register the actual function

void function SetupRemoteFuncAliases()
{
	//###############################################
	//#		THESE MUST STAY IN SYNC	CLIENT/SERVER	#
	//###############################################
	#if CLIENT 
		array<void functionref()> functions = 
		[
			Minimap_EnableDraw_Internal,
			Minimap_DisableDraw_Internal,
			ServerCallback_DeleteSpawnedClientSideDynamicLights,
			UpdateRUITest,
			ServerCallback_KillReplayHud_Activate,
			ServerCallback_KillReplayHud_Deactivate,
			FS_CreateTeleportFirstPersonEffectOnPlayer,
			TridentBoost_Visuals,
			RefreshImageAndScaleOnMinimapAndFullmap,
			ServerCallback_UpdateHeroStats,
			SCB_WeaponInspectHint,
			ServerCallback_PlayMatchEndMusic,
			ServerCallback_DestroyEndAnnouncement,
			ServerCallback_ShowDeathScreen,
			ServerCallback_DeathScreenSwitchTab,
			ServerCallback_ShowFlowstateDeathRecapNoSpectate,
			ServerCallback_RespawnDNAHint,
			ServerCallback_PlayerBootsOnGround,
			ServerCallback_RefreshDeathBoxHighlight,
			ServerCallback_RefreshLootbinHighlight,
			ServerCallback_ClearHints,
			ServerCallback_AnnounceCircleClosing,
			ServerCallback_PlayScreenFXWarpJump,
			ServerCallback_GameModeAnnouncement,
			SCB_AbortCurrentDialogue, /* sh_sp_dialogue.gnut */
			ClearMatchPoints,
			AddRoundPointToWinner_IMC,
			AddRoundPointToWinner_Militia,
			AddRoundPointTied,
			SND_UpdateUIScore,
			FlowstateSND_CustomBuyMenu_Stop,
			ServerCallback_BuyRejected,
			ServerCallback_FSDM_CoolCamera,
			SND_ForceUpdatePlayerCount,
			Consumable_UseBomb,
			ServerCallback_CTF_HideCustomUI,
			Tracker_ShowChampion,
			ServerToClient_DisplayCancelReviveHintForPlayer,
			ServerToClient_RemoveCancelReviveHintForPlayer,
			ServerCallback_FlashScreenForPlayer,
			ServerCallback_PlayPhaseGateSoundSuite,
			FS_CreateIntroScreen,
			FSIntro_ForceEnd,
			ServerCallback_CTF_CheckUpdatePlayerLegend,
			ForceScoreboardLoseFocus,
			ForceScoreboardFocus
			UpdateDpadHud_Copy,
			ServerCallback_Scenarios_MatchEndAnnouncement,
			Tracker_StatRequestFailed,
			FS_ForceCompass,
			FS_DestroyCompass,
			FS4DIntroSequence
			// ,
			// HaloBrIntroSequence,
			// ServerCallback_ShotgunKickNoAmmoMessage
		]
	#endif
	
	#if SERVER 
		array<string> functions = 
		[
			"Minimap_EnableDraw_Internal",
			"Minimap_DisableDraw_Internal",
			"ServerCallback_DeleteSpawnedClientSideDynamicLights",
			"UpdateRUITest",
			"ServerCallback_KillReplayHud_Activate",
			"ServerCallback_KillReplayHud_Deactivate",
			"FS_CreateTeleportFirstPersonEffectOnPlayer",
			"TridentBoost_Visuals",
			"RefreshImageAndScaleOnMinimapAndFullmap",
			"ServerCallback_UpdateHeroStats",
			"SCB_WeaponInspectHint",
			"ServerCallback_PlayMatchEndMusic",
			"ServerCallback_DestroyEndAnnouncement",
			"ServerCallback_ShowDeathScreen",
			"ServerCallback_DeathScreenSwitchTab",
			"ServerCallback_ShowFlowstateDeathRecapNoSpectate",
			"ServerCallback_RespawnDNAHint",
			"ServerCallback_PlayerBootsOnGround",
			"ServerCallback_RefreshDeathBoxHighlight",
			"ServerCallback_RefreshLootbinHighlight",
			"ServerCallback_ClearHints",
			"ServerCallback_AnnounceCircleClosing",
			"ServerCallback_PlayScreenFXWarpJump",
			"ServerCallback_GameModeAnnouncement",
			"SCB_AbortCurrentDialogue", /* sh_sp_dialogue.gnut */
			"ClearMatchPoints",
			"AddRoundPointToWinner_IMC",
			"AddRoundPointToWinner_Militia",
			"AddRoundPointTied",
			"SND_UpdateUIScore",
			"FlowstateSND_CustomBuyMenu_Stop",
			"ServerCallback_BuyRejected",
			"ServerCallback_FSDM_CoolCamera",
			"SND_ForceUpdatePlayerCount",
			"Consumable_UseBomb",
			"ServerCallback_CTF_HideCustomUI",
			"Tracker_ShowChampion",
			"ServerToClient_DisplayCancelReviveHintForPlayer",
			"ServerToClient_RemoveCancelReviveHintForPlayer",
			"ServerCallback_FlashScreenForPlayer",
			"ServerCallback_PlayPhaseGateSoundSuite",
			"FS_CreateIntroScreen",
			"FSIntro_ForceEnd",
			"ServerCallback_CTF_CheckUpdatePlayerLegend",
			"ForceScoreboardLoseFocus",
			"ForceScoreboardFocus",
			"UpdateDpadHud_Copy",
			"ServerCallback_Scenarios_MatchEndAnnouncement",
			"Tracker_StatRequestFailed",
			"FS_ForceCompass",
			"FS_DestroyCompass",
			"FS4DIntroSequence"
			// ,
			// "HaloBrIntroSequence",
			// "ServerCallback_ShotgunKickNoAmmoMessage"
		]
	#endif
	
	int iter = 1
	
	foreach( func in functions )
	{
		#if CLIENT
			file.functionrefs[ string( func ) ] <- func	
			file.functionrefsToInt[ string( func ) ] <- iter
			file.intToFunctionRef[ iter ] <- string( func )
		#endif 
		
		#if SERVER 
			file.functionrefsToInt[ func ] <- iter
			file.intToFunctionRef[ iter ] <- func
		#endif
		
		iter++;
	}
		
}

int function FindFuncID_ByRef( string funcRef )
{
	if( funcRef in file.functionrefsToInt )
		return file.functionrefsToInt[ funcRef ]
		
	return -1
}

string function FindFuncName_ByID( int funcID )
{
	if( funcID in file.intToFunctionRef )
		return file.intToFunctionRef[ funcID ]
		
	return ""
}

//moved to _utility. 
//void function Remote_CallFunction_ByRef( entity player, string funcName )
	
#if CLIENT
	void function Remote_CallFunction_ByRef_internal( int funcID )
	{
		string funcName = FindFuncName_ByID( funcID )
		
		if( funcName in file.functionrefs )
		{
			file.functionrefs[ funcName ]()
		}
		else
		{
			#if DEVELOPER	
				Warning( "Tried to call remote func id: " + funcID + " : " + funcName + "() but was not configured in " + FILE_NAME() )
			#endif 
		}
			
	}
#endif


//(mk): NOTICE: Param ranges are NON-INCLUSIVE
void function RemoteFunctions_Init_Begin()
{
	Remote_BeginRegisteringFunctions()
	_RegisteringFunctions = true

	SetupRemoteFuncAliases()
	Remote_RegisterClientFunction( "Remote_CallFunction_ByRef_internal", "int", INT_MIN, INT_MAX )
	Remote_RegisterClientFunction( "FS_LocalizationConsistencyCheck_014" )
	Remote_RegisterClientFunction( "FS_ByRef_ConsistencyCheck" )
	
	AddCallback_OnNetworkRegistration( ByRef_ConsistencyCheck )

	#if ENTITYVAR_DEPRECATED	
		#if !DEVELOPER
		if( GetCurrentPlaylistVarInt( "flowstate_modified_movement", 0 ) > 0 )
		{
		#endif
			#if DEVELOPER
				Warning( "Registered ModifiedMovement_RegisterNetworking()" )
			#endif
			
			ModifiedMovement_RegisterNetworking()
		#if !DEVELOPER
		}
		#endif
	#endif

	//Custom box msg from server //Reenabled to use Message_New function in dev modes.
	Remote_RegisterUntypedFunction_deprecated( "fs_NewBoxBuildMessage" )
	Remote_RegisterUntypedFunction_deprecated( "fs_NewBoxShowMessage" )
		
	// Ringflare
	Remote_RegisterClientFunction( "EnterTriggerRF", "entity")
	Remote_RegisterClientFunction( "ExitTriggerRF", "entity")
	
	//Evo shield mod
	if( GetCurrentPlaylistVarBool( "flowstate_evo_shields", false ) )
		Remote_RegisterClientFunction("EvoShield_PlayFX", "int", 0, 10)

	//Custom HoloSpray
	Remote_RegisterClientFunction("HoloSpray_OnUse", "int", INT_MIN, INT_MAX, "int", 0, 255)

	//Update rainbow extra property
	Remote_RegisterClientFunction("Flowstate_UpdateRainbowShieldExtraProperty", "int", INT_MIN, INT_MAX, "int", 0, 9999)
	
	//Dynamic client side lights spawn from server
	if( MapName() == eMaps.mp_rr_arena_composite ) //TEMP. To free up buffer space. Currently only used in composite. Cafe
		Remote_RegisterClientFunction( "ServerCallback_SpawnClientSideDynamicLight", "vector", -32000.0, 32000.0, 32, "vector", -32000.0, 32000.0, 32, "int", 0, 255, "float", 0.0, 32000.0, 8, "float", 0.0, 32000.0, 8 )

	if( MapName() == eMaps.mp_rr_olympus_tt )
		PathTT_OnNetworkRegistration()

	// R5R Sword
	RegisterNetworkedVariable( "isPlayerBlocking", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	if( Playlist() != ePlaylists.fs_scenarios )
		RegisterNetworkedVariable( "TitanSwordSuper", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME, -2.0 )//temp change. need a SNVT_TIME SNDC_PLAYER_EXCLUSIVE slot for scenarios. Cafe
	Remote_RegisterClientFunction( "ServerCallback_TitanSword_SuperReady", "entity" )
	Remote_RegisterClientFunction( "ServerCallback_StopDash" )
	Remote_RegisterClientFunction( "FS_TitanSword_CreateSlamGroundFx", "vector", -32000.0, 32000.0, 32 )
	
	// Falling Forever Custom Timer
	if( Playlist() == ePlaylists.fs_fallingforever )
		Remote_RegisterClientFunction("ServerCallback_SetTimer", "int", 0, INT_MAX)

	if( Playlist() == ePlaylists.fs_movementrecorder )
	{
		Remote_RegisterClientFunction( "FS_MovementRecorder_UpdateHints", "int", INT_MIN, INT_MAX ,  "bool", "float", 0.0, 86400.0, 32 )
		Remote_RegisterClientFunction( "FS_MovementRecorder_CreateInputHintsRUI", "bool" )
	}

	if( GetCurrentPlaylistVarBool( "is_halo_gamemode", false ) )
	{
		Remote_RegisterClientFunction( "FS_ForceDestroyCustomAdsOverlay" )
		Remote_RegisterClientFunction( "FS_ForceAdjustSunFlareParticleOnClient", "int", 0, 50 ) 
		Remote_RegisterClientFunction( "FSHaloMod_CreateKillStreakAnnouncement", "int", 0, 50 ) 
	}

	//Lightning Gun
	RegisterNetworkedVariable( "isPlayerShootingFlowstateLightningGun", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )
	Remote_RegisterClientFunction( "ServerCallback_CreatesLaserFXFromServer", "entity", "vector", -66000.0, 66000.0, 32, "vector", -32000.0, 32000.0, 32 )
	
	//Sentinel
	Remote_RegisterClientFunction( "Flowstate_SentinelChargeHUD", "float", 0.0, 999999.0, 32 )

	
	Remote_RegisterClientFunction( "ServerCallback_ShouldExitDrone" ) //meh
	Remote_RegisterClientFunction( "Gamemode1v1_ForceLegendSelector_Deprecated" )
	Remote_RegisterUIFunction( "UICallback_ForceCloseDeathScreenMenu" )
	
	if( Playlist() != ePlaylists.fs_scenarios )
		DEV_RegisterNetworking_SpawnSystem()

	if( Flowstate_IsHaloMode() )
		RegisterNetworkedVariable( "fs_haloMod_assignedMasterChief", SNDC_PLAYER_GLOBAL, SNVT_INT, -1 )
	
	//Custom gamemodes
	switch ( Gamemode() )
	{
		case eGamemodes.WINTEREXPRESS:
			Remote_RegisterClientFunction( "OpenFRChallengesSettingsWpnSelector" )
			Remote_RegisterClientFunction( "CloseFRChallengesSettingsWpnSelector" )	
			Remote_RegisterClientFunction( "FS_Scenarios_ChangeAliveStateForPlayer", "int", INT_MIN, INT_MAX, "bool" )
			Remote_RegisterClientFunction( "FS_Scenarios_TogglePlayersCardsVisibility", "bool", "bool" )
			Remote_RegisterClientFunction( "FS_Scenarios_SetupPlayersCards", "bool" )
			Remote_RegisterClientFunction( "FS_Scenarios_AddEnemyHandle", "int", INT_MIN, INT_MAX )
			Remote_RegisterClientFunction( "FS_Scenarios_AddEnemyHandle2", "int", INT_MIN, INT_MAX )
			Remote_RegisterClientFunction( "FS_Scenarios_AddAllyHandle", "int", INT_MIN, INT_MAX )
		break
		
		case eGamemodes.fs_dm:
			
			if( Playlist() == ePlaylists.fs_scenarios )
			{
				Remote_RegisterClientFunction( "FS_Scenarios_ChangeAliveStateForPlayer", "int", INT_MIN, INT_MAX, "bool" )
				Remote_RegisterClientFunction( "FS_Scenarios_TogglePlayersCardsVisibility", "bool", "bool" )
				Remote_RegisterClientFunction( "FS_Scenarios_SetupPlayersCards", "bool" )
				Remote_RegisterClientFunction( "FS_Scenarios_OnRingCreated", "entity" )
				Remote_RegisterClientFunction( "FS_Scenarios_SetRingCloseTimeForMinimap", "int", INT_MIN, INT_MAX )
				Remote_RegisterClientFunction( "FS_Scenarios_ForceUpdatePlayerCount", "entity" )
				
				Remote_RegisterClientFunction( "FS_Scenarios_AddEnemyHandle", "int", INT_MIN, INT_MAX )
				Remote_RegisterClientFunction( "FS_Scenarios_AddEnemyHandle2", "int", INT_MIN, INT_MAX )
				Remote_RegisterClientFunction( "FS_Scenarios_AddAllyHandle", "int", INT_MIN, INT_MAX )
				Remote_RegisterClientFunction( "Flowstate_ShowMatchFoundUI", "int", -2, 1200 )

				RegisterNetworkedVariable( "FS_Scenarios_MatchesWins", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
				RegisterNetworkedVariable( "FS_Scenarios_PlayerScore", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, 0 )
				RegisterNetworkedVariable( "FS_Scenarios_currentDeathfieldRadius", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME )
				RegisterNetworkedVariable( "FS_Scenarios_currentDistanceFromCenter", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME )
				RegisterNetworkedVariable( "FS_Scenarios_gameStartTime", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME )
				RegisterNetworkedVariable( "FS_Scenarios_timePlayerEnteredInLobby", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME )
			
				Scenarios_RegisterNetworking() //(mk)
			}
			
			if( Playlist() == ePlaylists.fs_lgduels_1v1 )
			{
				RegisterNetworkedVariable( "accuracy", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
				
				//offset, r, g, b | enemy offset, r, g, b (mk)
				Remote_RegisterClientFunction( "ServerCallback_SetLGDuelPesistenceSettings", "float", -999999.0, 999999.0, 32, "int", 0, 999999, "int", 0, 999999, "int", 0, 999999, "float", -999999.0, 999999.0, 32, "int", 0, 999999, "int", 0, 999999, "int", 0, 999999 )
			}
			
			if( Playlist() == ePlaylists.fs_dm_fast_instagib )
			{
				RegisterNetworkedVariable( "lastLightningGunShotTime", SNDC_PLAYER_GLOBAL, SNVT_TIME, -1 )
			}
			
			if( Playlist() == ePlaylists.fs_1v1_coaching )
			{
				Remote_RegisterClientFunction( "Flowstate_OpenCoachingMenu" )
				Remote_RegisterClientFunction( "Flowstate_CloseCoachingMenu" )
				Remote_RegisterClientFunction( "Flowstate_AddRecordingIdentifierToClient", "int", INT_MIN, INT_MAX, "float", 0.0, 999999.0, 32, "float", 0.0, 999999.0, 32, "int", INT_MIN, INT_MAX )
			}
			
			RegisterNetworkedVariable( "championDisplayEndTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			RegisterNetworkedVariable( "flowstate_DMStartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			RegisterNetworkedVariable( "flowstate_DMRoundEndTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			RegisterNetworkedVariable( "FSDM_GameState", SNDC_GLOBAL, SNVT_INT, -1 )
			
			//Todo: Try to remove these for non 1v1 gamemodes.
			RegisterNetworkedVariable( "FSDM_1v1_Enemy", SNDC_PLAYER_GLOBAL, SNVT_ENTITY )
			RegisterNetworkedVariable( "FSDM_1v1_PositionInScoreboard", SNDC_PLAYER_GLOBAL, SNVT_INT, -1 )
			
			Remote_RegisterClientFunction("DM_HintCatalog", "int", -100, 100, "int", INT_MIN, INT_MAX)	
			Remote_RegisterClientFunction( "Flowstate_ShowRespawnTimeUI", "int", -2, 1200 )

			//Movement Gym
			if( FlowState_EnableMovementGym() )
			{
				Remote_RegisterClientFunction("Cl_MovementGym_Init")
				Remote_RegisterClientFunction("MG_StopWatch_toggle", "bool")
				Remote_RegisterClientFunction("MG_StopWatch_Obituary", "int", 0, 9999, "entity", "int", 0, 9999)
				Remote_RegisterClientFunction("MG_Checkpoint_Msg")
				break
			}
			
			Remote_RegisterClientFunction("ServerCallback_ToggleDotForHitscanWeapons", "bool")		
			Remote_RegisterClientFunction("ServerCallback_OpenStatisticsUI") //REVISIT
			Remote_RegisterClientFunction("ServerCallback_FSDM_SetScreen", "int", 0, 255, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_FSDM_OpenVotingPhase", "bool")
			Remote_RegisterClientFunction("ServerCallback_FSDM_ChampionScreenHandle", "bool", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )
			Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateVotingMaps", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateMapVotesClient", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_CoolCameraOnMenu")
			Remote_RegisterClientFunction("ServerCallback_SendScoreboardToClient", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "float", 0.0, 10.0, 32, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_ClearScoreboardOnClient")

			Remote_RegisterClientFunction("FSDM_CustomWinnerScreen_Start", "int", INT_MIN, INT_MAX, "int", 0, 10)
			if( GetCurrentPlaylistVarBool( "enable_oddball_gamemode", false ) )
			{
				Remote_RegisterClientFunction("Oddball_HintCatalog", "int", -100, 100, "int", INT_MIN, INT_MAX)
				RegisterNetworkedVariable( "oddball_ballHeldTime", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, 0 )
				Remote_RegisterClientFunction( "SetBallPosesionIconOnHud", "int", -2, 2 )
				RegisterNetworkedVariable( "FSDM_Oddball_BallOrCarrierEntity", SNDC_GLOBAL, SNVT_ENTITY )
			}
			
			break
		
		case eGamemodes.fs_aimtrainer:
			Remote_RegisterUIFunction( "OpenFRChallengesMenu" )
			Remote_RegisterUIFunction( "CloseFRChallengesMenu" )
			Remote_RegisterUIFunction( "OpenFRChallengesMainMenu", "int", 0, 999999 )
			Remote_RegisterUIFunction( "CloseFRChallengesMainMenu")			
			Remote_RegisterUIFunction( "OpenFRChallengesSettings" )
			Remote_RegisterUIFunction( "CloseFRChallengesSettings" )		
			Remote_RegisterUIFunction( "OpenFRChallengesSettingsWpnSelector" )
			Remote_RegisterUIFunction( "CloseFRChallengesSettingsWpnSelector" )
			Remote_RegisterClientFunction("ServerCallback_OpenFRChallengesMenu","int", 0, 999999, "int", 0, 999999, "int", 0, 999999, "float", 0.0, 1.0, 32, "int", 0, 999999, "int", 0, 999999, "int", 0, 999999, "bool")
			Remote_RegisterClientFunction("ServerCallback_CloseFRChallengesResults")
			Remote_RegisterClientFunction("ServerCallback_RestartChallenge", "int", 0, 30)
			Remote_RegisterClientFunction("ServerCallback_HistoryUIAddNewChallenge", "int", 0, 999999, "int", 0, 999999, "entity", "float", 0.0, 1.0, 32, "int", 0, 999999, "int", 0, 999999, "int", 0, 999999,"int", 0, 999999)
			Remote_RegisterClientFunction("ServerCallback_OpenFRChallengesMainMenu", "int", 0, 999999 )
			Remote_RegisterClientFunction("ServerCallback_OpenFRChallengesHistory", "int", 0, 999999 )
			Remote_RegisterClientFunction("ServerCallback_OpenFRChallengesSettings")
			Remote_RegisterClientFunction("ServerCallback_CoolCameraOnMenu")
			Remote_RegisterClientFunction("ServerCallback_SetChallengeActivated", "bool")
			Remote_RegisterClientFunction("ServerCallback_LiveStatsUIDummiesKilled", "int", 0, 999999)
			Remote_RegisterClientFunction("ServerCallback_LiveStatsUIAccuracyViaTotalShots", "int", 0, 999999)
			Remote_RegisterClientFunction("ServerCallback_LiveStatsUIAccuracyViaShotsHits")
			Remote_RegisterClientFunction("ServerCallback_LiveStatsUIDamageViaWeaponAttack", "int", 0, 999999, "float", 0.0, 999999.0, 32)
			Remote_RegisterClientFunction("ServerCallback_LiveStatsUIDamageViaDummieDamaged", "int", 0, 999999)
			Remote_RegisterClientFunction("ServerCallback_LiveStatsUIHeadshot", "int", 0, 999999)
			Remote_RegisterClientFunction("ServerCallback_ResetLiveStatsUI")
			Remote_RegisterClientFunction("ServerCallback_CreateDistanceMarkerForGrenadesChallengeDummies", "entity", "entity")
			Remote_RegisterClientFunction("ServerCallback_ToggleDotForHitscanWeapons", "bool")
			
			break
		
		case eGamemodes.fs_snd: //(mk): can save 15 slots byRef
			Remote_RegisterClientFunction("Sh_SetAttackingLocations", "int", 0, 10)
			Remote_RegisterClientFunction("Sh_SetAttackerTeam", "int", 0, 10, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("SND_HintCatalog", "int", 0, 20, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("SND_HintCatalog_WithEntity", "int", 0, 10, "entity")
			Remote_RegisterClientFunction("Thread_SNDTimer", "float", 0.0, 999999.0, 32)
			Remote_RegisterClientFunction("Thread_SNDBuyMenuTimer", "float", 0.0, 999999.0, 32)
			Remote_RegisterClientFunction("ServerCallback_UpdateSpectatorTargetCount", "int", INT_MIN, INT_MAX, "bool")
			Remote_RegisterClientFunction("ServerCallback_ResetMoney")
			Remote_RegisterClientFunction("SND_ToggleScoreboardVisibility", "bool")
			Remote_RegisterClientFunction("SND_UpdateUIScoreOnPlayerConnected", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_ForceDestroyPlantingRUI")
			Remote_RegisterClientFunction("INFECTION_QuickHint", "int", -25, 255, "bool", "int", INT_MIN, INT_MAX) //For kill streak
			Remote_RegisterClientFunction("FlowstateSND_CustomBuyMenu_Start", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "bool")
			Remote_RegisterClientFunction("FlowstateSND_CustomWinnerScreen_Start", "int", INT_MIN, INT_MAX, "int", 0, 10)
			Remote_RegisterClientFunction("ServerCallback_SetBombState", "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_ToggleBombUIVisibility", "bool")
			Remote_RegisterClientFunction("ServerCallback_FlowstateSND_CustomBuyMenu_UpdateValues", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_BuySuccessful", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX  )
			Remote_RegisterClientFunction("ServerCallback_SellSuccessful", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX  )
			Remote_RegisterClientFunction("ServerCallback_OnMoneyAdded", "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_AddPlantZoneInGameHintA", "entity", "bool")
			Remote_RegisterClientFunction("ServerCallback_AddPlantZoneInGameHintB", "entity", "bool")
			Remote_RegisterClientFunction("ServerCallback_OnBombPlantedInGameHint", "entity", "float", 0.0, 999999.0, 32)
			Remote_RegisterClientFunction("ServerCallback_ForceZoneHintDestroy", "bool")
			Remote_RegisterClientFunction("ServerCallback_FSDM_OpenVotingPhase", "bool")
			Remote_RegisterClientFunction("ServerCallback_FSDM_SetScreen", "int", 0, 255, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_ClearScoreboardOnClient")
			Remote_RegisterClientFunction("ServerCallback_SendScoreboardToClient", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "float", 0.0, 10.0, 32, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("SetSNDKnifeColor", "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("SetCustomLightning", "int", -1, 10)
			Remote_RegisterClientFunction("ClientCodeCallback_OnPlayerConsumableInventoryChanged", "entity")
			Remote_RegisterClientFunction("SND_ToggleMoneyUI", "bool")
			Remote_RegisterUIFunction("Open_FSSND_BuyMenu", "float", -1.0, 99999.0, 32 )
			Remote_RegisterUIFunction("SND_UpdateVotesForTeam", "int", 0, 2, "int", INT_MIN, INT_MAX)
			Remote_RegisterUIFunction("Close_FSSND_BuyMenu")
			Remote_RegisterUIFunction("SND_Disable_IMCButton")
			Remote_RegisterUIFunction("SND_Disable_MILITIAButton")
			
			break
		
		case eGamemodes.fs_infected:
			RegisterNetworkedVariable( "isPlayerShadowForm", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )
			Remote_RegisterClientFunction("ApplyInfectedHUD")
			Remote_RegisterClientFunction("CleanUpInfectedClientEffects")
			Remote_RegisterClientFunction("ServerCallback_FSDM_SetScreen", "int", 0, 255, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_FSDM_OpenVotingPhase", "bool")
			Remote_RegisterClientFunction("ServerCallback_FSDM_ChampionScreenHandle", "bool", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )
			Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateVotingMaps", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateMapVotesClient", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_CoolCameraOnMenu")
			Remote_RegisterClientFunction("INFECTION_QuickHint", "int", -25, 255, "bool", "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ShowInfectedNearUI", "bool")

			//Evac
			Remote_RegisterClientFunction( "Infection_CreateEvacCountdown", "int", 0, 255) 
			Remote_RegisterClientFunction( "Infection_DestroyEvacCountdown" )
			Remote_RegisterClientFunction( "CreateCoolCameraForCoolDropship", "entity")
			Remote_RegisterClientFunction( "SignalToDestroyDropshipCamera" )
			Remote_RegisterClientFunction( "Infection_CreateEvacShipMinimapIcons", "entity")

			//Mystery Box
			Remote_RegisterClientFunction( "ServerCallback_MysteryBoxPrinttObituary", "entity" )
			Remote_RegisterClientFunction( "ServerCallback_MysteryBoxIsUsable", "entity", "bool" )
			Remote_RegisterClientFunction( "ServerCallback_SetWeaponMysteryBoxUsable", "entity")
			Remote_RegisterClientFunction( "ServerCallback_MysteryBoxChangeLocation_DoAnnouncement" )
			
			break
		
		case eGamemodes.fs_duckhunt:
			Remote_RegisterClientFunction("DUCKHUNT_CustomHint", "int", 0, 255, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("DUCKHUNT_Timer", "bool", "float", 0.0, 1000000.0, 32)
			Remote_RegisterClientFunction("ToggleSetHunterClient", "bool")
			
			break
		
		// case eGamemodes.flowstate_pkknockback:
			// Remote_RegisterClientFunction("UpdateRingSizeFromServer", "float", 0.0, 99999.0, 32)
			// Remote_RegisterClientFunction("ServerCallback_FSDM_SetScreen", "int", 0, 255, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", 0, 255)
			// Remote_RegisterClientFunction("ServerCallback_FSDM_OpenVotingPhase", "bool")
			// Remote_RegisterClientFunction("ServerCallback_FSDM_ChampionScreenHandle", "bool", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )
			// Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateVotingMaps", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			// Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateMapVotesClient", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			// Remote_RegisterClientFunction("ServerCallback_CoolCameraOnMenu")
			// Remote_RegisterClientFunction("ServerCallback_FSDM_CoolCamera")
			// Remote_RegisterClientFunction("MakeKnockbacksRUI", "int", 0, 255, "int", INT_MIN, INT_MAX)
			// Remote_RegisterClientFunction("DestroyKnockbacsRUI")
			// Remote_RegisterClientFunction("PKKNOCKBACK_CustomHint", "int", 0, 255, "int", INT_MIN, INT_MAX)
			
			// Remote_RegisterClientFunction( "PKKNOCKBACK_PlayerKilled", "int", INT_MIN, INT_MAX, "int", 0, 255, "entity", "int", INT_MIN, INT_MAX, "int", 0, 255, "entity")
			// Remote_RegisterClientFunction( "PKKNOCKBACK_Timer", "bool", "float", 0.0, 1000000.0, 32)
			// Remote_RegisterClientFunction( "PKKNOCKBACK_SetUIVisibility", "bool" )
			
			// break
			
		case eGamemodes.fs_prophunt:
			Remote_RegisterClientFunction("ServerCallback_FSDM_SetScreen", "int", 0, 255, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_FSDM_OpenVotingPhase", "bool")
			Remote_RegisterClientFunction("ServerCallback_FSDM_ChampionScreenHandle", "bool", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )
			Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateVotingMaps", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_FSDM_UpdateMapVotesClient", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_CoolCameraOnMenu")
			Remote_RegisterClientFunction("ServerCallback_SendScoreboardToClient", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "float", 0.0, 10.0, 32, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_SendProphuntPropsScoreboardToClient", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_SendProphuntHuntersScoreboardToClient", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("ServerCallback_ClearScoreboardOnClient")
			Remote_RegisterClientFunction("PROPHUNT_DoScreenFlashFX", "entity", "entity")
			Remote_RegisterClientFunction("PROPHUNT_EnableControlsUI", "bool", "float", 0.0, 1000000.0, 32)
			Remote_RegisterClientFunction("PROPHUNT_RemoveControlsUI")
			Remote_RegisterClientFunction("PROPHUNT_CustomHint", "int", 0, 255, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("PROPHUNT_AddUsageToHint", "int", 0, 255)
			Remote_RegisterClientFunction("PROPHUNT_AddWinningSquadData_PropTeamAddModelIndex", "bool", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("PROPHUNT_StartMiscTimer", "bool")
			Remote_RegisterClientFunction("PROPHUNT_QuickText", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX)
			Remote_RegisterClientFunction("CreateAndMoveCameraToWinnerProp", "entity")
			Remote_RegisterClientFunction("PROPHUNT_Disable_MILITIAButton")
			Remote_RegisterClientFunction("PROPHUNT_Disable_IMCButton")
			Remote_RegisterClientFunction("ForceDisableHuntersAbilityHint")
			Remote_RegisterClientFunction("EnableHuntersAbility")
			Remote_RegisterClientFunction("PROPHUNT_UpdateThirdPersonCameraPosition", "float", 0.0, 9999.0, 32)
			
			break
		
		case eGamemodes.CUSTOM_CTF:
			// CTF: Server to Client
			Remote_RegisterClientFunction( "ServerCallback_CTF_AddPointIcon", "entity", "entity", "int", 0, 255)
			Remote_RegisterClientFunction( "ServerCallback_CTF_RecaptureFlag", "int", 0, 999, "float", 0.0, 999.0, 32, "float", 0.0, 999.0, 32, "bool")
			Remote_RegisterClientFunction("ServerCallback_CTF_FlagCaptured", "entity", "int", 0, 255)
			Remote_RegisterClientFunction( "ServerCallback_CTF_CustomMessages", "entity", "int", 0, 255 )
			Remote_RegisterClientFunction( "ServerCallback_CTF_PickedUpFlag", "entity", "bool" )
			Remote_RegisterClientFunction( "ServerCallback_CTF_SetSelectedLocation", "int", 0, 255)
			Remote_RegisterClientFunction( "ServerCallback_CTF_SetPointIconHint", "int", 0, 255, "int", 0, 255 )
			Remote_RegisterClientFunction("ServerCallback_CTF_DoAnnouncement", "float", 0.0, 256.0, 32, "int", 0, 255, "float", 0.0, 1000000.0, 32)
			Remote_RegisterClientFunction( "ServerCallback_CTF_OpenCTFRespawnMenu", "vector", -32000.0, 32000.0, 32, "int", 0, 255, "int", 0, 255, "entity", "int", 0, 255)
			Remote_RegisterClientFunction( "ServerCallback_CTF_SetObjectiveText", "int", 0, 255)
			Remote_RegisterClientFunction( "ServerCallback_CTF_UpdatePlayerStats", "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_CTF_SetScreen", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_CTF_SetVoteMenuOpen", "bool", "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_CTF_UpdateVotingMaps", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("ServerCallback_CTF_UpdateMapVotesClient", "int", 0, 255, "int", 0, 255, "int", 0, 255, "int", 0, 255)
			Remote_RegisterClientFunction("FSDM_CustomWinnerScreen_Start", "int", INT_MIN, INT_MAX, "int", 0, 10)
			
			RegisterNetworkedVariable( "FSDM_GameState", SNDC_GLOBAL, SNVT_INT, -1 )
			RegisterNetworkedVariable( "flowstate_DMStartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			RegisterNetworkedVariable( "flowstate_DMRoundEndTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			RegisterNetworkedVariable( "imcFlag", SNDC_GLOBAL, SNVT_ENTITY )
			RegisterNetworkedVariable( "milFlag", SNDC_GLOBAL, SNVT_ENTITY )
			RegisterNetworkedVariable( "FSIntro_StartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			RegisterNetworkedVariable( "FSIntro_EndTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			RegisterNetworkedVariable( "FSVoteTeam_EndTime", SNDC_GLOBAL, SNVT_TIME, -1 )
			
			Remote_RegisterClientFunction("ServerCallback_FS_OpenVoteTeamMenu", "bool")
			Remote_RegisterClientFunction("ServerCallback_AddClientThatVotedToTeam", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )
			Remote_RegisterClientFunction("ServerCallback_RemoveClientThatVotedFromTeam", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )
			break					
	}	
	//TF2 leftovers + Survival base gamemode
	RegisterSignal("OnChangedPlayerClass")
	RegisterSignal("BleedOut_OnStartDying")
	
	Remote_RegisterClientFunction( "ServerCallback_SkydiveTrailStart", "entity" )
	Remote_RegisterClientFunction( "ServerCallback_SkydiveTrailEnd", "entity" )
	// RegisterNetworkedVariable( "skyDiveTrailOverrideIndex", SNDC_PLAYER_GLOBAL, SNVT_INT, -1 )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_EventNotification" )
	Remote_RegisterClientFunction( "ServerCallback_UpdateHudWeaponData", "entity" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_BLEEDOUT_ShowWoundedMarker" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_BLEEDOUT_HideWoundedMarker" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_BLEEDOUT_StartFirstAidProgressBar" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_BLEEDOUT_StopFirstAidProgressBar" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_ModelViewerDisableConflicts" )
	Remote_RegisterUntypedFunction_deprecated( "SCB_AddGrenadeIndicatorForEntity" )
	Remote_RegisterUntypedFunction_deprecated( "ScriptCallback_UnlockAchievement" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SonarPulseFromPosition" )
	Remote_RegisterClientFunction( "ServerCallback_SonarPulseConeFromPosition", "vector", -32000.0, 32000.0, 32, "float", 0.0, 32000.0, 8, "vector", -1.0, 1.0, 32, "float", -360.0, 360.0, 8, "int", 0, 128, "float", 0.0, 32000.0, 32, "bool", "bool" )
	// Remote_RegisterClientFunction( "ServerCallback_SonarAreaScanTarget", "entity", "entity" )

	RegisterNetworkedVariable( "playerAllowedToLeech", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, true )

	RegisterEntityVar_AllSyncedEntity( "weaponx", "weaponLockedSet", 0 )
	
	RegisterEntityVar( "player", "nextRespawnTime", 0 )
	RegisterEntityVar( "player", "musicPackAssigned", 0 )

	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_UpdateMarker" )
	Remote_RegisterUntypedFunction_deprecated( "DisablePrecacheErrors" )
	Remote_RegisterUntypedFunction_deprecated( "RestorePrecacheErrors" )

	// Remote_RegisterClientFunction( "SCB_UpdatePlayerWeaponReactiveEffects", "entity", "int", 0, eReactiveEffectUpdateType.len() ) //unused. Cafe

	bool isOptInServer = Dev_CommandLineHasParm( "-optinserver" )
	RegisterNetworkedVariable( "isOptInServer", SNDC_GLOBAL, SNVT_BOOL, isOptInServer )

	Remote_RegisterClientFunction( "SCB_WattsonRechargeHint" )

	// GAME STATE
	RegisterServerVar( "gameStateChangeTime", null )
	RegisterServerVar( "gameState", -1 )
	RegisterServerVar( "gameStartTime", null )
	RegisterServerVar( "coopStartTime", null )
	RegisterServerVar( "gameEndTime", 0.0 )
	RegisterServerVar( "switchedSides", null )
	RegisterServerVar( "replayDisabled", false )

	// KILL REPLAY
	RegisterServerVar( "roundWinningKillReplayEnabled", false )
	RegisterServerVar( "roundWinningKillReplayPlaying", false )
	RegisterServerVar( "roundScoreLimitComplete", false )
	RegisterServerVar( "roundWinningKillReplayEntHealthFrac", 0.0 )

	RegisterServerVar( "badRepPresent", false )
	RegisterServerVar( "roundBased", false )
	RegisterServerVar( "roundStartTime", null )
	RegisterServerVar( "roundEndTime", 0.0 )
	RegisterServerVar( "roundsPlayed", 0 )

	RegisterNetworkedVariable( "PreGameStartTime", SNDC_GLOBAL, SNVT_TIME, 0.0 )
	RegisterServerVar( "winningTeam", null )

	//Fade REVISIT
	Remote_RegisterClientFunction( "ServerCallback_SonarPhaseChamber", "entity", "entity", "float", 0.0, 32000.0, 32 )
	
	// Attack/Defend based game modes
	RegisterNetworkedVariable( "attackingTeam", SNDC_GLOBAL, SNVT_INT, TEAM_UNASSIGNED )
	
	// Riffs
	RegisterServerVar( "minimapState", -1 )
	RegisterNetworkedVariable( "indicatorId", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, 0 )

	// DEATHBOX: gcard character vars
	RegisterNetworkedVariable( "characterIndex", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "overrideRUI", SNDC_DEATH_BOX, SNVT_BOOL, false )
	RegisterNetworkedVariable( "skinIndex", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "frameIndex", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "stanceIndex", SNDC_DEATH_BOX, SNVT_INT, -1 )

	// DEATHBOX: gcard badge vars
	RegisterNetworkedVariable( "firstBadgeIndex", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "firstBadgeDataInt", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "secondBadgeIndex", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "secondBadgeDataInt", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "thirdBadgeIndex", SNDC_DEATH_BOX, SNVT_INT, -1 )
	RegisterNetworkedVariable( "thirdBadgeDataInt", SNDC_DEATH_BOX, SNVT_INT, -1 )
	
	RegisterNetworkedVariable( "lootRarity", SNDC_DEATH_BOX, SNVT_INT, -1 )

	Remote_RegisterClientFunction( "ServerToClient_PlayLootRarityFXOnDeathboxDrop", "entity" )
	Remote_RegisterClientFunction( "Flyer_ServerToClient_DisplayFlyerDeathboxPrompt" )

	RegisterNetworkedVariable( "ownerEHI", SNDC_DEATH_BOX, SNVT_BIG_INT, -1 )

	RegisterNetworkedVariable( "hasDeathFieldImmunity", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	RegisterNetworkedVariable( "displayMapzoneText", SNDC_GLOBAL, SNVT_BOOL, true )

	RegisterNetworkedVariable( "hasLockedInCharacter", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )
	RegisterNetworkedVariable( "characterSelectLockstepPlayerIndex", SNDC_PLAYER_GLOBAL, SNVT_INT, -1 )
	RegisterNetworkedVariable( "characterSelectFocusIndex", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, -1 )
	

	if( Playlist() != ePlaylists.fs_scenarios )
	{
		RegisterNetworkedVariable( "characterSelectionReady", SNDC_GLOBAL, SNVT_BOOL, false )
		RegisterNetworkedVariable( "characterSelectLockstepIndex", SNDC_GLOBAL, SNVT_INT, -1 )
		RegisterNetworkedVariable( "characterSelectLockstepStartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "characterSelectLockstepEndTime", SNDC_GLOBAL, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "squadPresentationStartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "championSquadPresentationStartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "pickLoadoutGamestateEndTime", SNDC_GLOBAL, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "pickLoadoutGamestateStartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
	} 
	else // cafe was here
	{
		RegisterNetworkedVariable( "characterSelectionReady", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
		RegisterNetworkedVariable( "characterSelectLockstepIndex", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, -1 )
		RegisterNetworkedVariable( "characterSelectLockstepStartTime", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "characterSelectLockstepEndTime", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "pickLoadoutGamestateEndTime", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME, -1 )
		RegisterNetworkedVariable( "pickLoadoutGamestateStartTime", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME, -1 )
	}

	Remote_RegisterClientFunction( "ServerCallback_CharacterLockRejected" )

	RegisterNetworkedVariable( "championEEH", SNDC_GLOBAL, SNVT_BIG_INT, EncodedEHandle_null )
	RegisterNetworkedVariable( "championSquad1EEH", SNDC_GLOBAL, SNVT_BIG_INT, EncodedEHandle_null )
	RegisterNetworkedVariable( "championSquad2EEH", SNDC_GLOBAL, SNVT_BIG_INT, EncodedEHandle_null )

	//RegisterNetworkedVariable( "ultimateCredits", SNDC_PLAYER_GLOBAL, SNVT_UNSIGNED_INT, 0 )
	Remote_RegisterClientFunction( "ServerCallback_Mirage_DecoysDeployed", "bool" )
	Remote_RegisterClientFunction( "ServerCallback_MatchEndAnnouncement", "bool", "int", INT_MIN, INT_MAX )
	//Remote_RegisterClientFunction( "ServerCallback_DestroyEndAnnouncement" ) //(mk): moved to byRef (needs verified as safe, delete this parenthesis after confirming)
	
	Remote_RegisterClientFunction( "ServerCallback_SquadEliminated", "int", TEAM_INVALID, 126 )
	
	//Remote_RegisterClientFunction( "ServerCallback_ShowDeathScreen" ) //(mk): moved to byRef
	//Remote_RegisterClientFunction( "ServerCallback_DeathScreenSwitchTab" ) //(mk): moved to byRef (also wasn't used)
	//Remote_RegisterClientFunction( "ServerCallback_ShowFlowstateDeathRecapNoSpectate" ) //moved to byRef

	Remote_RegisterClientFunction( "ServerCallback_SendDeathRecapData", "int", -1, INT_MAX, "int", -1, INT_MAX, "int", -1, INT_MAX, "int", INT_MIN, INT_MAX, "int", -1, INT_MAX, "int", 0, INT_MAX, "int", 0, INT_MAX, "float", 0.0, 1.0, 32, "float", 0.0, 1.0, 32, "float", 0.0, 86400.0, 32, "int", -1, INT_MAX, "int", -1, INT_MAX )
	Remote_RegisterClientFunction( "ServerCallback_DeathRecapDataUpdated", "bool", "int", -1, INT_MAX )

	Remote_RegisterClientFunction( "ServerCallback_AddWinningSquadData", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )
	Remote_RegisterClientFunction( "ServerCallback_ShowWinningSquadSequence" ) //possibly move to byRef

	RegisterNetworkedVariable( "focalTrap", SNDC_PLAYER_EXCLUSIVE, SNVT_ENTITY )

	RegisterNetworkedVariable( "gladCardPlayer", SNDC_PLAYER_EXCLUSIVE, SNVT_ENTITY )

	Remote_RegisterClientFunction( "ServerCallback_DisplayWaitingForRespawn", "entity", "float", 0.0, 5000.0, 32, "float", 0.0, 5000.0, 32 )
	Remote_RegisterClientFunction( "ServerCallback_RespawnPodStarted", "float", 0.0, 5000.0, 32 )
	//Remote_RegisterClientFunction( "ServerCallback_RespawnDNAHint" ) //(mk): moved to byRef

	//RegisterNetworkedVariable( "hasDataKnife", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )

	RegisterNetworkedVariable( "isJumpmaster", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )
	RegisterNetworkedVariable( "isJumpingWithSquad", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )
	RegisterNetworkedVariable( "playerInPlane", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )

	RegisterNetworkedVariable( "freefallActive", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	RegisterNetworkedVariable( "freefallEmoteAvailable", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	RegisterNetworkedVariable( "freefallIsFromPlane", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )

	RegisterNetworkedVariable( "inventoryEnabled", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, true )

	RegisterNetworkedVariable( "pingEnabled", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, true )

	RegisterNetworkedVariable( "kills", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
	RegisterNetworkedVariable( "latency", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
	RegisterNetworkedVariable( "damage", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, 0 )

	if( Gamemode() == eGamemodes.CUSTOM_CTF )
	{
		RegisterNetworkedVariable( "captures", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
		RegisterNetworkedVariable( "returns", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, 0 )
	} 
	else if( Gamemode() == eGamemodes.fs_snd )
	{
		// RegisterNetworkedVariable( "money", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
		RegisterNetworkedVariable( "planted", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
		RegisterNetworkedVariable( "defused", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
		RegisterNetworkedVariable( "playerStamina", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, 100 )
		RegisterNetworkedVariable( "playerStaminaRecovering", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	} 
	// else
	// {
		RegisterNetworkedVariable( "deaths", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
		RegisterNetworkedVariable( "assists", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )
	// }

	RegisterNetworkedVariable( "isHealing", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	RegisterNetworkedVariable( "healingKitTypeCurrentlyBeingUsed", SNDC_PLAYER_GLOBAL, SNVT_INT, -1 )
	RegisterNetworkedVariable( "isReceivingFirstAid", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )

	int defaultHealOption = GetCurrentPlaylistVarBool( "auto_heal_option", false ) ? -1 : 0
	RegisterNetworkedVariable( "selectedHealthPickupType", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, defaultHealOption )
	// RegisterNetworkedVariable( "TrainingEndTime", SNDC_PLAYER_EXCLUSIVE, SNVT_TIME, -1 )
	RegisterNetworkedVariable( "usedSelfRevive", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )

	RegisterNetworkedVariable( "playerPrimaryWeapon0", SNDC_PLAYER_GLOBAL, SNVT_INT, -1 )
	RegisterNetworkedVariable( "playerPrimaryWeapon1", SNDC_PLAYER_GLOBAL, SNVT_INT, -1 )

	Remote_RegisterClientFunction( "ServerCallback_MonitorCommsMenuUsage", "int", 0, 2 )
	Remote_RegisterClientFunction( "ServerCallback_SetCommsDialogueEnabled", "int", 0, 2 )

	Inventory_RegisterNetworking()
	PlayerMatchState_RegisterNetworking()
	Waypoints_RegisterNetworking()
	RespawnBeacons_RegisterNetworking()

	if( Gamemode() == eGamemodes.fs_infected )
		Gamemode_ShadowSquad_RegisterNetworking()

	MapZones_RegisterNetworking()
	Ultimates_RegisterNetworking()
	ClientMusic_RegisterNetworking()

	RegisterNetworkedVariable( "currentDeathFieldStage", SNDC_GLOBAL, SNVT_INT, -1 )
	RegisterNetworkedVariable( "nextCircleStartTime", SNDC_GLOBAL, SNVT_TIME, -1 )
	RegisterNetworkedVariable( "circleCloseTime", SNDC_GLOBAL, SNVT_TIME, -1 )
	RegisterNetworkedVariable( "PlaneDoorsOpenTime", SNDC_GLOBAL, SNVT_TIME, -1 )
	RegisterNetworkedVariable( "PlaneDoorsCloseTime", SNDC_GLOBAL, SNVT_TIME, -1 )
	RegisterNetworkedVariable( "connectedPlayerCount", SNDC_GLOBAL, SNVT_INT )
	RegisterNetworkedVariable( "livingPlayerCount", SNDC_GLOBAL, SNVT_INT )
	RegisterNetworkedVariable( "squadsRemainingCount", SNDC_GLOBAL, SNVT_INT )
	RegisterNetworkedVariable( "gameState", SNDC_GLOBAL, SNVT_INT, -1 )

	RegisterNetworkedVariable( "skydiveFreelookActive", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	RegisterNetworkedVariable( "skydiveFollowPlayer", SNDC_PLAYER_EXCLUSIVE, SNVT_ENTITY )

	Remote_RegisterUIFunction( "ServerCallback_OpenSurvivalExitMenu", "bool" )
	Remote_RegisterUIFunction( "ServerToUI_CharacterLockRejected" )

	Remote_RegisterUIFunction( "ServerCallback_GotBPFromPremier" )

	Remote_RegisterClientFunction( "ServerCallback_RespawnBeaconStart", "float", 0.0, 5000.0, 16, "float", 0.0, 5000.0, 16 )
	Remote_RegisterClientFunction( "ServerCallback_RespawnBeaconStop" )
	Remote_RegisterClientFunction( "ServerCallback_RefreshInventory" )
	Remote_RegisterClientFunction( "ServerCallback_RefreshInventoryAndWeaponInfo" )
	Remote_RegisterClientFunction( "ServerCallback_SurvivalHint", "int", 0, 10 )

	Remote_RegisterClientFunction( "ServerCallback_SUR_PingMinimap", "vector", -1.0, 1.0, 32, "float", 0.0, 300.0, 8, "float", 1.0, 5000.0, 8, "float", 1.0, 5000.0, 8, "int", 0, 5 )
	Remote_RegisterClientFunction( "ServerCallback_Survival_PlayCrowdEvent", "vector", -32000.0, 32000.0, 32, "int", 0, 128)
	Remote_RegisterClientFunction( "ServerCallback_Survival_NewKillLeader", "entity", "int", 0, 999 )
	Remote_RegisterClientFunction( "ServerCallback_Survival_HighlightedPlayerKilled", "entity", "entity", "int", 0, 16)
	Remote_RegisterClientFunction( "ServerCallback_Survival_PathfinderSurveyNotifications", "entity", "int", 0, 8 )
	Remote_RegisterClientFunction( "ServerCallback_Survival_CreateBeaconWorldIcon", "entity", "entity" )

	Remote_RegisterClientFunction( "ServerToClient_OnStartedUsingHealthPack", "int", 0, 127 )
	Remote_RegisterClientFunction( "ServerCallback_PromptSayThanks", "entity" )
	Remote_RegisterClientFunction( "ServerCallback_PromptWelcome" )

	Remote_RegisterClientFunction( "PROTO_ServerCallback_Sur_HoldForUltimate" )

	RegisterNetworkedVariable( "playerObservedCount", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )

	// RegisterNetworkedVariable( "inMatchRankScoreProgress", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, -1 )
	// RegisterNetworkedVariable( "rankedKillAssistMultiplier", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, 10 )

	#if CLIENT
		ShRanked_RegisterNetworkFunctions()
	#endif

	#if CLIENT
		CLSurvival_RegisterNetworkFunctions()
		ShEliteStreak_RegisterNetworkFunctions()

		switch ( Gamemode() )
		{
			case eGamemodes.fs_dm:
				CL_FSDM_RegisterNetworkFunctions()
			break
			
			case eGamemodes.CUSTOM_CTF:
				CL_FSCTF_RegisterNetworkFunctions()
			break
		}

		RegisterNetworkedVariableChangeCallback_bool( "playerInPlane", PlayerPlaneStatusChanged )
		RegisterNetworkedVariableChangeCallback_bool( "isJumpmaster", JumpmasterStatusChanged )
		RegisterNetworkedVariableChangeCallback_bool( "isJumpingWithSquad", PlayerPlaneStatusChanged )
		RegisterNetworkedVariableChangeCallback_bool( "freefallActive", PlayerFreefallActiveChanged )
		RegisterNetworkedVariableChangeCallback_bool( "freefallEmoteAvailable", PlayerFreefallEmoteAvailableChanged )
		RegisterNetworkedVariableChangeCallback_bool( "skydiveFreelookActive", SkydiveFreelookActiveChanged )
		RegisterNetworkedVariableChangeCallback_ent( "skydiveFollowPlayer", SkydiveFollowPlayerChanged )
		RegisterNetworkedVariableChangeCallback_int( "healingKitTypeCurrentlyBeingUsed", OnInUseHealingKitTypeChanged )
		RegisterNetworkedVariableChangeCallback_int( "selectedHealthPickupType", OnHealthPickupTypeChanged )
		RegisterNetworkedVariableChangeCallback_int( "playerPrimaryWeapon0", OnPlayerEquippedWeaponChanged )
		RegisterNetworkedVariableChangeCallback_int( "playerPrimaryWeapon1", OnPlayerEquippedWeaponChanged )
	#endif

	Remote_RegisterClientFunction( "ServerCallback_NessyMessage", "int", 0, 50 )
	Remote_RegisterClientFunction( "ServerCallback_PlayPassiveVoice", "int", 0, 50 )

	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_ResetEntSkyScale" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SetEntSkyScale" )
	Remote_RegisterClientFunction( "ServerCallback_ResetMapSettings" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SetMapSettings" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_ToneMapping" )

	Remote_RegisterClientFunction( "ServerCallback_YouDied", "entity", "float", -1.0, 1.0, 10, "int", -1, eDamageSourceId.len(), "float", 0.0, 200.0, 32 )
	Remote_RegisterClientFunction( "ServerCallback_YouRespawned" )

	if ( !IsLobby() )
		Remote_RegisterClientFunction( "ServerCallback_ShowDeathHint", "int", 0, MAX_DEATH_HINTS )
		
	Bloodhound_TT_RegisterNetworking() // Bloodhound Town Takeover

	//Remote_RegisterClientFunction( "ServerCallback_SatchelPlanted" ) //disabled for now ~mkos

	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SetAssistInformation" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_DataKnifeStartLeech" )
	Remote_RegisterClientFunction( "ServerCallback_DataKnifeCancelLeech" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_ControlPanelRefresh" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_TurretRefresh" )
	Remote_RegisterClientFunction( "ServerCallback_OnEntityKilled", "entity", "entity", "int", INT_MIN, INT_MAX, "int", -1, eDamageSourceId.len() ) //
	Remote_RegisterClientFunction( "ServerCallback_OnEnemyDowned", "entity", "entity", "int", INT_MIN, INT_MAX, "int", -1, eDamageSourceId.len() ) //
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_PlayerConnectedOrDisconnected" )
	Remote_RegisterUIFunction( "SCBUI_PlayerConnectedOrDisconnected", "bool" )
	Remote_RegisterClientFunction( "ServerCallback_PlayerChangedTeams", "entity", "int", TEAM_INVALID, 126, "int", TEAM_INVALID, 126 ) //

	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_PlayerTookDamage" ) //
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_ScreenShake" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_UpdateOverheadIconForNPC" )

	Remote_RegisterClientFunction( "HandleBroadcastCommsAction", "entity", "int", 0, eCommsAction._count, "entity", "vector", -32000.0, 32000.0, 32, "int", 0, (1 << eCommsFlags._flagCount) )

	Remote_RegisterClientFunction( "PerformQuip", "entity", "int", 0, INT_MAX )

	if( Playlist() == ePlaylists.survival_training )
	{
		Remote_RegisterClientFunction( "Bleedout_DisplayTrainingFirstAidProgressBar", "entity", "float", 0.0, 86400.0, 32, "float", 0.0, 86400.0, 32 )
		Remote_RegisterClientFunction( "Bleedout_StopTrainingFirstAidProgressBar" )
	}

	RegisterEntityVar( "player", "permanentEventNotification", -1 )

	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_IncomingAirdrop" )
	Remote_RegisterClientFunction( "ServerCallback_CreateAirdropBadPlace", "int", INT_MIN, INT_MAX, "vector", -32000.0, 32000.0, 32, "int", INT_MIN, INT_MAX, "entity" )
	Remote_RegisterClientFunction( "ServerCallback_DestroyAirdropBadPlace", "int", INT_MIN, INT_MAX )

	Remote_RegisterClientFunction( "ServerCallback_AddDroneClientData", "entity" )
	Remote_RegisterClientFunction( "ServerCallback_SetLootDroneTrailFXType", "entity", "int", 0, INT_MAX )
	Remote_RegisterClientFunction( "ServerCallback_ClearLootDroneTrailFXType", "entity", "int", 0, INT_MAX )

	Remote_RegisterClientFunction( "ServerCallback_SetLootRollerLootTierFX", "int", 0, INT_MAX, "int", INT_MIN, INT_MAX, "bool" )
	Remote_RegisterClientFunction( "ServerCallback_StopLootRollerFX", "int", 0, INT_MAX )
	Remote_RegisterClientFunction( "ServerToClient_SetRisingWallAmbientGenericState", "entity", "bool" )

	if( Flowstate_MapHasTrain() )
		Remote_RegisterClientFunction( "ServerCallback_SetDesertlandsTrainAtStation", "bool" )

	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_Announcement" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_ScoreEvent" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_PlayConversation" )
	Remote_RegisterUntypedFunction_deprecated( "ServerCallback_PlaySquadConversation" )

	Remote_RegisterClientFunction( "ServerCallback_GiveMatchLossProtection" )

	#if MODEL_VIEWER_ENABLED
		// Model Viewer
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_MVUpdateModelBounds" )
		Remote_RegisterClientFunction_Optional( "ServerCallback_MVEnable" )
		Remote_RegisterClientFunction_Optional( "ServerCallback_MVDisable" )
	#endif
		
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SetClassicSkyScale" )
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_ResetClassicSkyScale" )
		Remote_RegisterClientFunction( "ServerCallback_ClientInitComplete" )
		RegisterServerVar( "forcedDialogueOnly", false )
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SetEntityVar" )
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SetServerVar" )
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_PlayMusic" )
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_OpenDevMenu" )
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_SetUIVar" )
		Remote_RegisterUIFunction( "ServerCallback_OpenPilotLoadoutMenu" )
		Remote_RegisterUntypedFunction_deprecated( "Dev_PrintClientMessage" )
		Remote_RegisterUntypedFunction_deprecated( "Dev_BuildClientMessage" )
		Remote_RegisterUntypedFunction_deprecated( "ServerCallback_AddArcConnectorToy" )

	Dialog_RegisterNetworking()

	RegisterNetworkedVariable( "PilotAbilitySelectMenu_Enabled", SNDC_GLOBAL, SNVT_INT, 1 )
	Remote_RegisterUIFunction( "SurvivalMenu_AckAction" )

	RegisterServerVar( "respawnAvailableBits0", 0 )
	RegisterServerVar( "respawnAvailableBits1", 0 )
	RegisterServerVar( "respawnAvailableBits2", 0 )
	RegisterServerVar( "respawnAvailableBits3", 0 )

	RegisterNetworkedVariable( "bleedoutEndTime", SNDC_PLAYER_GLOBAL, SNVT_TIME, 0.0 )
	RegisterNetworkedVariable( "bleedoutType", SNDC_PLAYER_GLOBAL, SNVT_UNSIGNED_INT, 0 )
	RegisterNetworkedVariable( "reviveEndTime", SNDC_PLAYER_GLOBAL, SNVT_TIME, 0.0 )
	RegisterNetworkedVariable( "reviveType", SNDC_PLAYER_GLOBAL, SNVT_UNSIGNED_INT, 0 )
	RegisterNetworkedVariable( "revivePlayerHealer", SNDC_PLAYER_GLOBAL, SNVT_ENTITY )
	RegisterNetworkedVariable( "tutorialContext", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, -1 )
	RegisterNetworkedVariable( "spectatorTargetCount", SNDC_PLAYER_GLOBAL, SNVT_INT, 0 )

	if( Playlist() == ePlaylists.survival_training )
		Remote_RegisterClientFunction( "ServerCallback_ActionCountUpdated", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX )

	// Text Info Panels
	Remote_RegisterUntypedFunction_deprecated( "Dev_BuildTextInfoPanel" )
	Remote_RegisterUntypedFunction_deprecated( "Dev_CreateTextInfoPanel" )
	Remote_RegisterUntypedFunction_deprecated( "Dev_CreateTextInfoPanelWithID" )
	Remote_RegisterUntypedFunction_deprecated( "Dev_DestroyTextInfoPanelWithID" )

	Remote_RegisterClientFunction( "ServerToClient_ScreenCoverTransition", "float", 0.0, 5000.0, 32 )
	Remote_RegisterClientFunction( "ServerCallback_WatchForSyncedMeleeCancelPeriod", "float", 0.0, 10.0 )
	Remote_RegisterClientFunction( "ServerCallback_SyncedMeleeDone" )
	Remote_RegisterClientFunction( "ServerCallback_SetWeaponPreviewState", "bool" )
	
	// Localized Msg functions
	Remote_RegisterUntypedFunction_deprecated( "FS_BuildLocalizedMultiVarString" )
	Remote_RegisterClientFunction( "FS_ShowLocalizedMultiVarMessage", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "float", 0.0, 5000.0, 32 )
	Remote_RegisterUntypedFunction_deprecated( "FS_BuildLocalizedTokenWithVariableString" ) //only for variable string
	Remote_RegisterClientFunction( "FS_DisplayLocalizedToken", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "float", 0.0, 5000.0, 32 )

	// Localized TextPanel
	Remote_RegisterUntypedFunction_deprecated( "FS_BuildLocalizedVariable_InfoPanel" )
	Remote_RegisterClientFunction( "FS_CreateTextInfoPanelWithID_Localized", "int", INT_MIN, INT_MAX, "int", INT_MIN, INT_MAX, "vector", -32000.0, 32000.0, 32, "vector", -32000.0, 32000.0, 32, "float", 0.0, 100.0, 32, "int", INT_MIN, INT_MAX )

	// Experiment -- This will be moved to code.
	Remote_RegisterClientFunction( "FS_Toggle_Mute", "bool" ) //"int", 9999999, 100000000, "bool" )
	Remote_RegisterClientFunction( "FS_Silence", "bool", "int", INT_MIN, INT_MAX )
	
	// Client-side helper (not permissive)
	RegisterNetworkedVariable( "IsAdmin", SNDC_PLAYER_EXCLUSIVE, SNVT_BOOL, false )
	
	//r5r.dev player stats
	Remote_RegisterClientFunction( "Tracker_SetPlayerStatBool", "entity", "bool" )
	Remote_RegisterClientFunction( "Tracker_SetPlayerStatInt", "entity", "int", INT_MIN, INT_MAX )
	Remote_RegisterClientFunction( "Tracker_SetPlayerStatFloat", "entity", "float", -999999.0, 999999.0, 32 )
		
	//Todo(mk): Move to client fetch( for cards ), remove networked vars
	RegisterNetworkedVariable( "SeasonScore", SNDC_PLAYER_EXCLUSIVE, SNVT_BIG_INT, 0  )
	RegisterNetworkedVariable( "SeasonKills", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, 0, 0, INT_MAX )
	RegisterNetworkedVariable( "SeasonDeaths", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, 0, 0, INT_MAX )
	RegisterNetworkedVariable( "SeasonPlaytime", SNDC_PLAYER_EXCLUSIVE, SNVT_BIG_INT, 0, 0, INT_MAX )
	RegisterNetworkedVariable( "SeasonGamesplayed", SNDC_PLAYER_GLOBAL, SNVT_BIG_INT, 0, 0, INT_MAX )
	
	RegisterNetworkedVariable( "stats_loaded", SNDC_PLAYER_GLOBAL, SNVT_BOOL, false )

	// ClientWorldImg -- Todo: Lower ranges.
	if( Gamemode() != eGamemodes.fs_snd )
	{
		Remote_RegisterUntypedFunction_deprecated( "__BuildWorldAssetString" ) //optional, else called by int ref
		Remote_RegisterClientFunction( "ServerCallback_CreateWorldAsset", "vector", -32000.0, 32000.0, 32, "vector", -32000.0, 32000.0, 32, "float", -1.0, 99999.0, 32, "float", -1.0, 99999.0, 32, "int", -1, INT_MAX, "int", -1, INT_MAX, "int", -1, 99, "float", -1.0, 1.0, 32, "bool", "float", -1.0, 32000.0, 32 )
		Remote_RegisterClientFunction( "ServerCallback_DestroyWorldAsset", "int", -2, 99999 )
		Remote_RegisterClientFunction( "ServerCallback_SetWorldAssetVisibility", "int", 0, 99999, "int", 0, 99999, "bool", "bool", "bool", "int", -2, 5000, "int", -5, 3, "bool" )
		Remote_RegisterClientFunction( "ServerCallback_ModifyWorldAsset", "int", -2, 99999, "int", -2, 99999, "vector", -32000.0, 32000.0, 32, "vector", -32000.0, 32000.0, 32, "float", -1.0, 99999.0, 32, "float", -1.0, 99999.0, 32, "float", -1.0, 1.0, 32, "int", -1, INT_MAX )
		Remote_RegisterClientFunction( "ServerCallback_CreateChannel", "int", -1, 99999 )
	}
	// Maybe enable them only in the gamemodes that are planned to be used ( 1v1? )
	// Don't reenable until you confirm that the gamemodes work or find a solution for this. Cafe
	// Commenting this one fixes prophunt loading
	
	// (mk): Both of these were simply at the limit. 
	// Disabling mode specific remote calls when not in the mode and reducing overall usage is the solution.
	// Functions with many parameters fills up the buffer.
	// Both of these efficiency methods will reduce slot usage and buffer consumption
	
	RegisterServerVar( "tracker_enabled", false )
	RegisterServerVar( "batch_fetch_complete", false )
	Remote_RegisterUIFunction( "UI_Callback_MOTD" )

	if ( IsLobby() )
	{
		//Register networked variables for the lobby
	}

	#if CLIENT
		if ( !IsLobby() )
		{
			ClBleedout_RegisterNetworkFunctions()
		}
	#endif

	RegisterNetworkedVariable( "cameraNearbyEnemySquads", SNDC_PLAYER_EXCLUSIVE, SNVT_INT, 0 )

	s_callbackRegistrationIsClosed = true
	ExecuteSetupCallbacks()
}

bool s_callbackRegistrationIsClosed = false
array<void functionref()> s_setupCallbacks
void function AddCallback_OnNetworkRegistration( void functionref() func )
{
	Assert( !s_callbackRegistrationIsClosed, "Must be called before network registration has finished." )

	s_setupCallbacks.append( func )
}

void function ExecuteSetupCallbacks()
{
	foreach( void functionref() func in s_setupCallbacks )
		func()
}

// purpose: finalize remote function registration and send checksum to the server
void function RemoteFunctions_Init_Finish()
{
	Remote_EndRegisteringFunctions()
	_RegisteringFunctions = false
}

float function GetNV_PreGameStartTime()
{
	return GetGlobalNetTime( "PreGameStartTime" )
}

bool function GetNV_FreefallIsFromPlane( entity player )
{
	return player.GetPlayerNetBool( "freefallIsFromPlane" )
}

void function ByRef_ConsistencyCheck()
{
	#if SERVER	
		file.iConsistencyCheck = file.intToFunctionRef.len()
		
		AddClientCommandCallback( "byRefIntegrityCheck", ClientCommand_CheckByRefConsistency )
		AddCallback_OnClientConnected
		( 
			void function( entity player )
			{
				if( IsValid( player ) )
					Remote_CallFunction_NonReplay( player, "FS_ByRef_ConsistencyCheck" )
			}
		)
	#endif
	
	#if CLIENT	
		file.iConsistencyCheck = file.functionrefs.len()
	#endif
}

#if CLIENT 
	void function FS_ByRef_ConsistencyCheck()
	{
		if( !file.bConsistencyCheckComplete )
		{
			entity player = GetLocalClientPlayer()
			
			if( IsValid( player ) )
			{
				player.ClientCommand( "byRefIntegrityCheck " + string( file.iConsistencyCheck ) )
				file.bConsistencyCheckComplete = true
			}
		}
	}
#endif

#if SERVER 
	bool function ClientCommand_CheckByRefConsistency( entity player, array<string> args )
	{
		if( args.len() < 1 )
			return true
			
		string param = args[ 0 ]
		
		if( !IsNumeric( param ) )
			return true
			
		int clientCount = int( param )
		
		if ( clientCount != file.iConsistencyCheck )
		{
			const string info = "Your remote integrity check byref does not match the server."
			KickPlayerById( player.GetPlatformUID(), info )
		}
		
		return true
	}	
#endif 