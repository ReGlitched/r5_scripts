global function MenuCallbacks_Init
global function AddCallback_OnLeaveMatch

struct
{
	array< void functionref(entity) > onLeaveMatchCallbacks
} file

void function MenuCallbacks_Init()
{
    AddClientCommandCallback( "LeaveMatch", ClientCommandCallback_LeaveMatch )
}

bool function ClientCommandCallback_LeaveMatch( entity player, array<string> args )
{
	foreach ( func in file.onLeaveMatchCallbacks )
		func( player )

    // Maybe save persistent data here.
	thread function() : ( player )
	{
		if(player.IsObserver())
		{
			PlayerStopSpectating(player)
			WaitFrame()
			if(!IsValid(player)) return
		}
		ClientCommand( player, "disconnect" )
	}()
		
    return true
}

void function AddCallback_OnLeaveMatch( void functionref(entity) func )
{
	Assert( !file.onLeaveMatchCallbacks.contains(func) )
	file.onLeaveMatchCallbacks.append( func )
}
